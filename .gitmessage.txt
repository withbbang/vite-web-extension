################################################################################################################################
# <type>(<scope>) : <subject>
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 X
# 타입과 제목은 필수 / 범위는 선택
# 예) feat : 로그인 기능 추가

# 바로 아래 공백 유지 (제목과 본문의 분리를 위함)

################################################################################################################################
# Body Message (선택사항)
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

###############################################################################################################################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# 예) Close #7

# Issue Tracker Number or URL

###############################################################################################################################
# --- COMMIT END ---
# <type> list
#   Feat    : 새로운 기능
#   Fix     : 버그
#   Refactor: 코드 리팩토링
#   Style   : 코드 의미에 영향을 주지 않는 변경사항 (형식 지정, 세미콜론 누락 등)
#   Docs    : 문서의 추가, 수정, 삭제
#   Test    : 테스트 추가, 수정, 삭제 (비즈니스 로직에 변경 없음)
#   Chore   : 기타 변경사항 (빌드 부분 혹은 패키지 매니저 수정사항)
# -----------------------------------------------------------------------------------------------------------------------------
# Remember me ~
#   Capitalize the subject line
#     제목 첫 글자를 대문자로
#   Use the imperative mood in the subject line
#     제목은 명령문 사용 (과거형 X)
#   Do not end the subject line with a period
#     제목 끝에 마침표(.) 금지
#   Separate subject from body with a blank line
#     제목과 본문을 한 줄 띄워 분리하기 (빈 행으로 구분)
#   Use the body to explain what and why vs. how
#     본문은 "어떻게" 보다 "무엇을", "왜"를 설명한다.
#   Can use multiple lines with "-" for bullet points in body
#     본문에 여러줄의 메시지(목록)를 작성할 땐 "-"로 구분
# -----------------------------------------------------------------------------------------------------------------------------
# Way to apply this template
# 템플릿 적용 방법
#   1. Create .gitmessage.txt in project directory or root directory
#      .gitmessage.txt를 프로젝트 디렉터리나 루트 디렉터리에 생성한다.
#   2. Type the command on cli like below. () is option.
#      > git config [--global / (--local)] commit.template [~/.gitmessage.txt / ./.gitmessage.txt]
#      cli에 아래 커맨드를 입력한다. ()는 옵션
#   3. git add [file name]
#   4. git commit -> open vim editor
#   5. Type the title at line 6 and contents at line 13. if you have content more than 1, - Divide it by using a delimiter.
#      6번째 라인에 제목, 13번째 라인에 내용을 쓴다. 내용이 1개를 넘어가면 '-'로 나눈다.
#   6. Save and exit editor
# -----------------------------------------------------------------------------------------------------------------------------
# Commit Message Guide Reference
# https://github.com/RomuloOliveira/commit-messages-guide/blob/master/README_ko-KR.md
# -----------------------------------------------------------------------------------------------------------------------------